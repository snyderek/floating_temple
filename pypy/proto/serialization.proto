// Floating Temple
// Copyright 2015 Derek S. Snyder
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package floating_temple.pypy;

message BoolProto {
  required bool value = 1;
}

message BytearrayProto {
  // TODO(dss): Rename this field to 'data'.
  required bytes value = 1;
}

message ComplexProto {
  required double real = 1;
  required double imag = 2;
}

message DictItemProto {
  required int64 key_object_index = 1;
  required int64 value_object_index = 2;
}

message DictProto {
  repeated floating_temple.pypy.DictItemProto item = 1;
}

message EllipsisProto {
}

message FloatProto {
  required double value = 1;
}

message IntProto {
  required sint64 value = 1;
}

message ListProto {
  repeated int64 object_index = 1;
}

message LongProto {
  // TODO(dss): Support long values that are bigger than 64 bits.
  required sint64 value = 1;
}

message NoneProto {
}

message NotImplementedProto {
}

message ObjectObjectProto {
}

message SliceProto {
  optional int64 start_object_index = 1;
  optional int64 stop_object_index = 2;
  optional int64 step_object_index = 3;
}

message SmallLongProto {
  required sint64 value = 1;
}

// TODO(dss): Rename this message to BytesProto.
message StringProto {
  required bytes value = 1;
}

message TupleProto {
  repeated int64 object_index = 1;
}

message UnicodeProto {
  required string value = 1;
}

message UnserializableProto {
}

message ObjectProto {
  enum Type {
    UNKNOWN = 0;

    // TODO(dss): Renumber these enum constants.
    BOOL = 1;
    BYTEARRAY = 2;
    COMPLEX = 3;
    DICT = 4;
    ELLIPSIS = 17;
    FLOAT = 5;
    INT = 6;
    LIST = 7;
    LONG = 8;
    NONE = 9;
    NOT_IMPLEMENTED = 18;
    OBJECT = 10;
    SLICE = 11;
    SMALL_LONG = 12;
    STRING = 13;
    TUPLE = 14;
    UNICODE = 15;
    UNSERIALIZABLE = 16;
  }

  // Exactly one of the following fields must be set.
  optional floating_temple.pypy.BoolProto bool_object = 1;
  optional floating_temple.pypy.BytearrayProto bytearray_object = 2;
  optional floating_temple.pypy.ComplexProto complex_object = 3;
  optional floating_temple.pypy.DictProto dict_object = 4;
  optional floating_temple.pypy.EllipsisProto ellipsis_object = 17;
  optional floating_temple.pypy.FloatProto float_object = 5;
  optional floating_temple.pypy.IntProto int_object = 6;
  optional floating_temple.pypy.ListProto list_object = 7;
  optional floating_temple.pypy.LongProto long_object = 8;
  optional floating_temple.pypy.NoneProto none_object = 9;
  optional floating_temple.pypy.NotImplementedProto not_implemented_object = 18;
  optional floating_temple.pypy.ObjectObjectProto object_object = 10;
  optional floating_temple.pypy.SliceProto slice_object = 11;
  // TODO(dss): Remove the 'small_long_object' field. It's redundant with
  // 'long_object'.
  optional floating_temple.pypy.SmallLongProto small_long_object = 12;
  // TODO(dss): Rename this field to 'bytes_object'.
  optional floating_temple.pypy.StringProto string_object = 13;
  optional floating_temple.pypy.TupleProto tuple_object = 14;
  optional floating_temple.pypy.UnicodeProto unicode_object = 15;
  optional floating_temple.pypy.UnserializableProto unserializable_object = 16;
}
